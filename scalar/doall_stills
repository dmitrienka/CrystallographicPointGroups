#!/bin/bash
echo "Point group scalar still generator starting"

RENDER_FILE="$1"
if [ -f $RENDER_FILE ]; then
  . $RENDER_FILE
else
    echo "$RENDER_FILE not found; exiting"
    exit
fi

# test to make sure that the requested number of threads is <= the available number
MAXTHREADS=`sysctl -n hw.ncpu`   # need to check for OS... this one will only work on Mac OS X
if [ $NTHREADS -gt $MAXTHREADS ]
  then 
    NTHREADS="$MAXTHREADS"
fi


#
# loop through all point groups
#
for FILE in pg_*_still.pov; do 
	echo 'starting scalar still image for point group file ' $FILE `date`
	if [ -e $FILE ]; then 
		echo $FILE >$TMP_FOLDER/play
		sed -i back "s/_still\.pov//" $TMP_FOLDER/play
		sed -i back "s/pg_//" $TMP_FOLDER/play
		read short <$TMP_FOLDER/play
		rm $TMP_FOLDER/play
		rm $TMP_FOLDER/playback
		echo "Input_File_Name=$FILE" >povray.ini
		echo "Output_File_Name=$BUILD_FOLDER/"$short"_still.png" >>povray.ini
		echo "+L$POVRAYinclude" >>povray.ini
		echo "+W$STILL_SIZE +H$STILL_SIZE" >>povray.ini
		echo "Initial_Clock=0" >>povray.ini
		echo "Initial_Frame=0" >>povray.ini
		echo "Final_Clock=0" >>povray.ini
		echo "Final_Frame=0" >>povray.ini
		echo "Work_Threads=$NTHREADS" >>povray.ini

		$POVRAY povray.ini 2>/dev/null
		$CONVERT -colorspace RGB -auto-level $BUILD_FOLDER/$short\_still\.png  $BUILD_FOLDER/scalar_"$short"\.jpeg
		$CONVERT $BUILD_FOLDER/scalar_"$short"\.jpeg -resize 50% $BUILD_FOLDER/scalar_"$short"_small\.jpeg
		rm -f $BUILD_FOLDER/$short\_still\.png
	fi
done
# collect all the jpegs into a tar-ball
CURDIR=`pwd`
cd $BUILD_FOLDER
rm -f scalar_stills.tar.gz
tar -cf scalar_stills.tar scalar*.jpeg
gzip scalar_stills.tar
rm -f *.jpeg
echo "Point group scalar still generator quitting"
exit
