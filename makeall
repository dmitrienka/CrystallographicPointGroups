#!/bin/bash
# Written by M. De Graef; 9/19/18
# Project Funding: NSF DMR-1564550
#
# This script is Mac OS X specific... but might work on Linux with minor modifications
#
# This script is the top level script for building all the magnetic point group stills and movies.
# It should be called simply in one of the following ways:
#
# ./makeall 
# nohup ./makeall & >makeall_output.txt
#
# All rendering options should be set in the RenderParameters file before running this script.
# To edit this file, first copy it from the RenderParameters.template file, and then edit the
# parameters for your site.

# -------------------------------------------------------
# define a couple of functions
function showdate() {
echo "- - - - - - - - - - - - - - - - - - - - - - - - - "
date
echo "- - - - - - - - - - - - - - - - - - - - - - - - - "
}

# -------------------------------------------------------
RENDER_FILE="RenderParameters"
if [ -f $RENDER_FILE ]; then
  . $RENDER_FILE
else
    echo "$RENDER_FILE not found; exiting"
    exit
fi

CURDIR=`pwd`

# test to make sure that the requested number of threads is <= the available number
MAXTHREADS=`sysctl -n hw.ncpu`   # need to check for OS... this one will only work on Mac OS X
if [ $NTHREADS -gt $MAXTHREADS ]
  then 
    NTHREADS="$MAXTHREADS"
fi

# do we need to create the BUILD_FOLDER?
if [ -e "$BUILD_FOLDER" ] 
  then 
    echo "$BUILD_FOLDER already exists"
  else
    mkdir $BUILD_FOLDER
fi

# do we need to create the temporary folder?
if [ -e "$TMP_FOLDER" ] 
  then 
    echo "$TMP_FOLDER already exists"
  else
    mkdir $TMP_FOLDER
fi

# do we need to create the frames folder?
if [ -e "$FRAMES_FOLDER" ] 
  then 
    echo "$FRAMES_FOLDER already exists"
  else
    mkdir $FRAMES_FOLDER
fi

# and print out a message
echo "Stills and movies will be built in folder $BUILD_FOLDER using $NTHREADS of $MAXTHREADS available threads."

RENDER_FILE=\.\./$RENDER_FILE

## -------------------------------------------------------
echo "Starting main point group script"
echo " "
echo "Make sure you have a lot of time and diskspace..."

echo " "
if [ $DO_RAW = 1 ]; then
  echo "Switching to directory raw to create 32 jpeg images"
  cd raw
  ./doall $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_SCALAR_STILLS = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory scalar to create 32 jpeg images"
  cd scalar
  ./doall_stills $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_SCALAR_MOVIES = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory scalar to create 32 movies "
  cd scalar
  ./doall_movies $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_PSEUDOSCALAR_STILLS = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory pseudoscalar to create 32 jpeg images"
  cd pseudoscalar
  ./doall_stills $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_PSEUDOSCALAR_MOVIES = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory pseudoscalar to create 32 movies "
  cd pseudoscalar
  ./doall_movies $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_ANAGLYPHS = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory anaglyph to create 2*32 jpeg images"
  cd anaglyph
  ./doall_stills $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_SPECIALPOSITIONS = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory special_positions to create 1 movie"
  cd special_positions 
  ./doall $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_POLAR_STILLS = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory polar to create 32 jpeg images"
  cd polar
  ./doall_stills $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_POLAR_MOVIES = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory polar to create 32 movies "
  cd polar
  ./doall_movies $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_AXIAL_STILLS = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory axial to create 122 2x2 jpeg images"
  cd axial
  ./doall_stills $RENDER_FILE
  cd $CURDIR
fi
#
if [ $DO_AXIAL_MOVIES = 1 ]; then 
  showdate
  echo " "
  echo "Switching to directory axial to create 122 movies "
  cd axial
  ./doall_movies $RENDER_FILE
  cd $CURDIR
fi

echo "- - - - - - - - - - - - - - - - - - - - - - - - - "
echo "All is well that ends well ..."
showdate
exit
